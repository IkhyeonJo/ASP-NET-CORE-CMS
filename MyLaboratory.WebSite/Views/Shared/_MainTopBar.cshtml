@model MyLaboratory.Common.DataAccess.Models.Account
@using MyLaboratory.WebSite.Common
@using System.Text
@using Newtonsoft.Json
@using MyLaboratory.WebSite.Models.ViewModels.Notice
@using System.Text.RegularExpressions
@inject MyLaboratory.Common.DataAccess.Contracts.IFixedIncomeRepository fixedIncomeRepository
@inject MyLaboratory.Common.DataAccess.Contracts.IFixedExpenditureRepository fixedExpenditureRepository
@{
    Context.Session.TryGetValue("AccountSession", out byte[] resultByte);
    DateTime currentDate = new DateTime(Convert.ToInt32(Regex.Split(DateTime.UtcNow.ToLocalTime().ToString("yyyy-MM-dd"), "-")[0]), Convert.ToInt32(Regex.Split(DateTime.UtcNow.ToLocalTime().ToString("yyyy-MM-dd"), "-")[1]), Convert.ToInt32(Regex.Split(DateTime.UtcNow.ToLocalTime().ToString("yyyy-MM-dd"), "-")[2]));

    List<FixedIncomeOutputViewModel> fixedIncomeOutputViewModels = new List<FixedIncomeOutputViewModel>();
    foreach (var item in await fixedIncomeRepository.GetFixedIncomesAsync(JsonConvert.DeserializeObject<Account>(Encoding.Default.GetString(resultByte)).Email))
    {
        bool noticedResult = false;

        try
        {
            noticedResult = currentDate.Subtract(new DateTime(Convert.ToInt32(Regex.Split(DateTime.UtcNow.ToLocalTime().ToString("yyyy-MM-dd"), "-")[0]), item.DepositMonth, item.DepositDay)).TotalDays <= 0 && Math.Abs(currentDate.Subtract(new DateTime(Convert.ToInt32(Regex.Split(DateTime.UtcNow.ToLocalTime().ToString("yyyy-MM-dd"), "-")[0]), item.DepositMonth, item.DepositDay)).TotalDays) <= ServerSetting.NoticeMaturityDateDay;
        }
        catch // 윤년이 아닌데 2월 29일로 초기화 했을 때 예외 발생
        {
            noticedResult = false;
        }

        if (item.Unpunctuality) // 시간 미엄수 체크 시, 알림 뜨도록 설정
        {
            noticedResult = true;
        }

        fixedIncomeOutputViewModels.Add(new FixedIncomeOutputViewModel()
        {
            Id = item.Id,
            MainClass = localizer[item.MainClass.ToString()].Value,
            SubClass = localizer[item.SubClass.ToString()].Value,
            Contents = item.Contents,
            Amount = item.Amount,
            DepositMonth = item.DepositMonth,
            DepositDay = item.DepositDay,
            MaturityDate = item.MaturityDate.ToString("yyyy-MM-dd"),
            Note = item.Note,
            DepositMyAssetProductName = item.DepositMyAssetProductName,
            Created = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(item.Created, OSTimeZone.DestinationTimeZoneId),
            Updated = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(item.Updated, OSTimeZone.DestinationTimeZoneId),
            Noticed = noticedResult,
            Expired = item.MaturityDate.Subtract(currentDate).TotalDays < 0
        });
    }

    List<FixedExpenditureOutputViewModel> fixedExpenditureOutputViewModels = new List<FixedExpenditureOutputViewModel>();
    foreach (var item in await fixedExpenditureRepository.GetFixedExpendituresAsync(JsonConvert.DeserializeObject<Account>(Encoding.Default.GetString(resultByte)).Email))
    {
        bool noticedResult = false;

        try
        {
            noticedResult = currentDate.Subtract(new DateTime(Convert.ToInt32(Regex.Split(DateTime.UtcNow.ToLocalTime().ToString("yyyy-MM-dd"), "-")[0]), item.DepositMonth, item.DepositDay)).TotalDays <= 0 && Math.Abs(currentDate.Subtract(new DateTime(Convert.ToInt32(Regex.Split(DateTime.UtcNow.ToLocalTime().ToString("yyyy-MM-dd"), "-")[0]), item.DepositMonth, item.DepositDay)).TotalDays) <= ServerSetting.NoticeMaturityDateDay;
        }
        catch // 윤년이 아닌데 2월 29일로 초기화 했을 때 예외 발생
        {
            noticedResult = false;
        }

        if (item.Unpunctuality) // 시간 미엄수 체크 시, 알림 뜨도록 설정
        {
            noticedResult = true;
        }

        fixedExpenditureOutputViewModels.Add(new FixedExpenditureOutputViewModel()
        {
            Id = item.Id,
            MainClass = localizer[item.MainClass.ToString()].Value,
            SubClass = localizer[item.SubClass.ToString()].Value,
            Contents = item.Contents,
            Amount = item.Amount,
            PaymentMethod = item.PaymentMethod,
            MyDepositAsset = item.MyDepositAsset,
            DepositMonth = item.DepositMonth,
            DepositDay = item.DepositDay,
            MaturityDate = item.MaturityDate.ToString("yyyy-MM-dd"),
            Created = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(item.Created, OSTimeZone.DestinationTimeZoneId),
            Updated = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(item.Updated, OSTimeZone.DestinationTimeZoneId),
            Note = item.Note,
            Noticed = noticedResult,
            Expired = item.MaturityDate.Subtract(currentDate).TotalDays < 0
        });
    }

    int fixedIncomesNoticedCount = fixedIncomeOutputViewModels.Where(a => a.Noticed == true).Count();
    int fixedExpenditureNoticedCount = fixedExpenditureOutputViewModels.Where(a => a.Noticed == true).Count();

    int fixedIncomesExpiredCount = fixedIncomeOutputViewModels.Where(a => a.Expired == true).Count();
    int fixedExpenditureExpiredCount = fixedExpenditureOutputViewModels.Where(a => a.Expired == true).Count();
}

@*<!-- Navbar -->*@
@*<nav class="main-header navbar navbar-expand navbar-white navbar-light">*@
<nav class="main-header navbar navbar-expand navbar-dark">
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        @*<li class="nav-item d-none d-sm-inline-block">
                <a asp-controller="DashBoard" asp-action="Index" class="nav-link">Home</a>
            </li>*@
        @*<li class="nav-item d-none d-sm-inline-block">
                <a href="#" class="nav-link">Contact</a>
            </li>*@
    </ul>

    <!-- Right navbar links -->
    <ul class="navbar-nav ml-auto">

        @*
            <!-- Navbar Search -->
            <li class="nav-item">
                <a class="nav-link" data-widget="navbar-search" href="#" role="button">
                    <i class="fas fa-search"></i>
                </a>
                <div class="navbar-search-block">
                    <form class="form-inline">
                        <div class="input-group input-group-sm">
                            <input class="form-control form-control-navbar" type="search" placeholder="Search" aria-label="Search">
                            <div class="input-group-append">
                                <button class="btn btn-navbar" type="submit">
                                    <i class="fas fa-search"></i>
                                </button>
                                <button class="btn btn-navbar" type="button" data-widget="navbar-search">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </li>
        *@

        @*
            <!-- Messages Dropdown Menu -->
            <li class="nav-item dropdown">
                <a class="nav-link" data-toggle="dropdown" href="#">
                    <i class="far fa-comments"></i>
                    <span class="badge badge-danger navbar-badge">3</span>
                </a>
                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                    <a href="#" class="dropdown-item">
                        <!-- Message Start -->
                        <div class="media">
                            <img src="dist/img/user1-128x128.jpg" alt="User Avatar" class="img-size-50 mr-3 img-circle">
                            <div class="media-body">
                                <h3 class="dropdown-item-title">
                                    Brad Diesel
                                    <span class="float-right text-sm text-danger"><i class="fas fa-star"></i></span>
                                </h3>
                                <p class="text-sm">Call me whenever you can...</p>
                                <p class="text-sm text-muted"><i class="far fa-clock mr-1"></i> 4 Hours Ago</p>
                            </div>
                        </div>
                        <!-- Message End -->
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item">
                        <!-- Message Start -->
                        <div class="media">
                            <img src="dist/img/user8-128x128.jpg" alt="User Avatar" class="img-size-50 img-circle mr-3">
                            <div class="media-body">
                                <h3 class="dropdown-item-title">
                                    John Pierce
                                    <span class="float-right text-sm text-muted"><i class="fas fa-star"></i></span>
                                </h3>
                                <p class="text-sm">I got your message bro</p>
                                <p class="text-sm text-muted"><i class="far fa-clock mr-1"></i> 4 Hours Ago</p>
                            </div>
                        </div>
                        <!-- Message End -->
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item">
                        <!-- Message Start -->
                        <div class="media">
                            <img src="dist/img/user3-128x128.jpg" alt="User Avatar" class="img-size-50 img-circle mr-3">
                            <div class="media-body">
                                <h3 class="dropdown-item-title">
                                    Nora Silvester
                                    <span class="float-right text-sm text-warning"><i class="fas fa-star"></i></span>
                                </h3>
                                <p class="text-sm">The subject goes here</p>
                                <p class="text-sm text-muted"><i class="far fa-clock mr-1"></i> 4 Hours Ago</p>
                            </div>
                        </div>
                        <!-- Message End -->
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item dropdown-footer">See All Messages</a>
                </div>
            </li>
        *@


        @*<!-- Notifications Dropdown Menu -->*@

        @if (Model.Role == Role.Admin)
        {
            @*
                <li class="nav-item dropdown">
                    <a class="nav-link" data-toggle="dropdown" href="#">
                        <i class="far fa-bell"></i>
                        <span class="badge badge-warning navbar-badge">15</span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                        <span class="dropdown-item dropdown-header">15 Notifications</span>
                        <div class="dropdown-divider"></div>
                        <a href="#" class="dropdown-item">
                            <i class="fas fa-envelope mr-2"></i> 4 new messages
                            <span class="float-right text-muted text-sm">3 mins</span>
                        </a>
                        <div class="dropdown-divider"></div>
                        <a href="#" class="dropdown-item">
                            <i class="fas fa-users mr-2"></i> 8 friend requests
                            <span class="float-right text-muted text-sm">12 hours</span>
                        </a>
                        <div class="dropdown-divider"></div>
                        <a href="#" class="dropdown-item">
                            <i class="fas fa-file mr-2"></i> 3 new reports
                            <span class="float-right text-muted text-sm">2 days</span>
                        </a>
                        <div class="dropdown-divider"></div>
                        <a href="#" class="dropdown-item dropdown-footer">See All Notifications</a>
                    </div>
                </li>
            *@
        }
        else if (Model.Role == Role.User)
        {
            if ((fixedIncomesNoticedCount + fixedIncomesExpiredCount + fixedExpenditureNoticedCount + fixedExpenditureExpiredCount) > 0)
            {
                <li class="nav-item dropdown">
                    <a class="nav-link" data-toggle="dropdown" href="#">
                        <i class="far fa-bell"></i>
                        <span class="badge badge-warning navbar-badge">@(fixedIncomesNoticedCount + fixedIncomesExpiredCount + fixedExpenditureNoticedCount + fixedExpenditureExpiredCount)</span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                        <span class="dropdown-item dropdown-header">@(fixedIncomesNoticedCount + fixedIncomesExpiredCount + fixedExpenditureNoticedCount + fixedExpenditureExpiredCount) @localizer["Notifications"].Value</span>
                        <div class="dropdown-divider"></div>
                        @if (fixedIncomesNoticedCount + fixedIncomesExpiredCount > 0)
                        {
                            <a href="@Url.Action("FixedIncome", "Notice")" class="dropdown-item">
                                <i class="fas fa-file mr-2"></i>[@(fixedIncomesNoticedCount + fixedIncomesExpiredCount)] @localizer["FixedIncome new message"].Value
                            </a>
                            <div class="dropdown-divider"></div>
                        }
                        @if (fixedExpenditureNoticedCount + fixedExpenditureExpiredCount > 0)
                        {
                            <a href="@Url.Action("FixedExpenditure", "Notice")" class="dropdown-item">
                                <i class="fas fa-file mr-2"></i>[@(fixedExpenditureNoticedCount + fixedExpenditureExpiredCount)] @localizer["FixedExpenditure new message"].Value
                            </a>
                            <div class="dropdown-divider"></div>
                        }
                        <span class="dropdown-item dropdown-footer">@localizer["Notifications"].Value</span>
                    </div>
                </li>
            }
        }

        @*<!-- Language Dropdown Menu -->*@ @*이미 로그인 화면에서 언어 설정하기 때문에 문제 없음*@
        @*
            <li class="nav-item dropdown">
                <a class="nav-link" data-toggle="dropdown" href="#">
                    <i class="fas fa-globe"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right p-0">
                    <a href="#" class="dropdown-item active">
                        English
                    </a>
                    <a href="#" class="dropdown-item">
                        German
                    </a>
                    <a href="#" class="dropdown-item">
                        French
                    </a>
                    <a href="#" class="dropdown-item">
                        Spanish
                    </a>
                </div>
            </li>
        *@
        @*
            <li class="nav-item">
                <a class="nav-link" data-widget="fullscreen" href="#" role="button">
                    <i class="fas fa-expand-arrows-alt"></i>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-widget="control-sidebar" data-slide="true" href="#" role="button">
                    <i class="fas fa-th-large"></i>
                </a>
            </li>
        *@
        <li class="nav-item dropdown user-menu">
            <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown">
                <img src="@Model.AvatarImagePath" class="user-image img-circle elevation-2" alt="User Image">
                <span class="d-none d-md-inline">@Model.FullName</span>
            </a>
            <ul class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                <!-- User image -->
                <li class="user-header bg-primary">
                    <img src="@Model.AvatarImagePath" class="img-circle elevation-2" alt="User Image">
                    <p>
                        @Model.FullName
                        <small>@localizer["Member since"] @TimeZoneInfo.ConvertTimeBySystemTimeZoneId(Model.Created, MyLaboratory.WebSite.Common.OSTimeZone.DestinationTimeZoneId).ToString("d")</small>
                    </p>
                </li>
                @*
                    <!-- Menu Body -->
                    <li class="user-body">
                        <div class="row">
                            <div class="col-4 text-center">
                                <a href="#">Followers</a>
                            </div>
                            <div class="col-4 text-center">
                                <a href="#">Sales</a>
                            </div>
                            <div class="col-4 text-center">
                                <a href="#">Friends</a>
                            </div>
                        </div>
                        <!-- /.row -->
                    </li>
                *@
                <!-- Menu Footer-->
                <li class="user-footer">
                    <a asp-controller="Management" asp-action="Profile" class="btn btn-default btn-flat">@localizer["Profile"]</a>
                    <a asp-controller="Account" asp-action="Logout" class="btn btn-default btn-flat float-right">@localizer["Sign out"]</a>
                </li>
            </ul>
        </li>
    </ul>
</nav>